name: E2E Observability Flow

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy-and-test:
    runs-on: self-hosted
    env:
      ANSIBLE_HOST_KEY_CHECKING: 'false'
      GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
      GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      MAIL_TO: ${{ secrets.MAIL_TO }}
      MAIL_FROM: ${{ secrets.MAIL_FROM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ansible deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip jq curl
          pip install --user ansible==9.5.1
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Ansible Ping Inventory
        run: ansible -i inventory.ini all -m ping || true

      - name: Deploy Stack (Postgres + App + Monitoring)
        run: |
          ansible-playbook -i inventory.ini full_postgres_setup.yml
          ansible-playbook -i inventory.ini setup_postgres.yml
          ansible-playbook -i inventory.ini run_springboot.yml
          ansible-playbook -i inventory.ini start_postgres.yml || true

      - name: Run Load / Functional Test
        run: |
          ansible-playbook -i inventory.ini ansible_training/deploy_metrics.yml || true

      - name: Collect Grafana Dashboard Snapshots
        run: |
          set -e
          for UID in app-perf pg-perf jmeter-perf; do
            echo "Export dashboard $UID"
            curl -s -H "Authorization: Bearer $GRAFANA_API_KEY" "$GRAFANA_URL/api/dashboards/uid/$UID" | jq '.' > dashboard_$UID.json || true
            # render PNG of first panel as sample (requires rendering plugin or image renderer)
            curl -s -H "Authorization: Bearer $GRAFANA_API_KEY" "$GRAFANA_URL/render/d-solo/$UID/_?panelId=1&width=1000&height=500" --output panel_${UID}_1.png || true
          done

      - name: Compose Report
        run: |
          cat > report.md <<'EOF'
          # E2E Observability Report
          Date: $(date -u)

          Included dashboards: app-perf, pg-perf, jmeter-perf

          Attachments:
          - JSON raw dashboards
          - First panel PNG previews
          EOF

      - name: Email Report
        if: always()
        run: |
          python3 .github/workflows/send_mail.py

      - name: Archive Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: grafana-dashboards
          path: |
            dashboard_*.json
            panel_*.png
            report.md
