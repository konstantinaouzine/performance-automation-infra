adminPassword: "grafanaadmin"
persistence:
  enabled: true
  size: 5Gi
initChownData:
  enabled: false
podSecurityContext:
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472
  fsGroupChangePolicy: OnRootMismatch
service:
  type: ClusterIP
  port: 3000

# Enable image rendering (added)
plugins:
  - grafana-image-renderer

imageRenderer:
  enabled: true
  # Optional tuning (keep default unless issues)
  # renderingConcurrency: 2
  # chromeBin: /usr/lib/chromium/chrome

grafana.ini:
  rendering:
    # Align with GF_RENDERING_SERVER_URL / GF_RENDERING_CALLBACK_URL env variables (separate renderer pod)
    server_url: http://grafana-image-renderer.monitoring:8081/render
    callback_url: http://grafana.monitoring:3000/
    concurrent_render_request_limit: 5
  plugins:
    enable_alpha: false
    app_tls_skip_verify_insecure: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'performance'
        orgId: 1
        folder: 'Performance'
        type: 'file'
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/performance

dashboards:
  performance:
    k8s:
      json: |
        {
          "__inputs": [],
          "__requires": [],
          "annotations": {
            "list": []
          },
          "links": [],
          "uid": "jmeter-perf",
          "panels": [
            {
              "datasource": "Prometheus",
              "fieldConfig": {
                "defaults": {},
                "overrides": []
              },
              "gridPos": { "h": 8, "w": 12, "x": 0, "y": 0 },
              "id": 1,
              "title": "CPU Usage % (Node)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "100 * (1 - avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])))",
                  "legendFormat": "{{instance}}",
                  "refId": "A"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {}, "overrides": [] },
              "gridPos": { "h": 8, "w": 12, "x": 12, "y": 0 },
              "id": 2,
              "title": "Memory Usage (Pod)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "sum by (pod) (container_memory_usage_bytes)",
                  "legendFormat": "{{pod}}",
                  "refId": "B"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {}, "overrides": [] },
              "gridPos": { "h": 8, "w": 12, "x": 0, "y": 8 },
              "id": 3,
              "title": "CPU Requests vs Usage (Pod)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "sum by (pod) (rate(container_cpu_usage_seconds_total[5m]))",
                  "legendFormat": "Usage {{pod}}",
                  "refId": "C"
                },
                {
                  "expr": "sum by (pod) (kube_pod_container_resource_requests_cpu_cores)",
                  "legendFormat": "Request {{pod}}",
                  "refId": "D"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {}, "overrides": [] },
              "gridPos": { "h": 8, "w": 12, "x": 12, "y": 8 },
              "id": 4,
              "title": "Memory Requests vs Usage (Pod)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "sum by (pod) (container_memory_usage_bytes)",
                  "legendFormat": "Usage {{pod}}",
                  "refId": "E"
                },
                {
                  "expr": "sum by (pod) (kube_pod_container_resource_requests_memory_bytes)",
                  "legendFormat": "Request {{pod}}",
                  "refId": "F"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {}, "overrides": [] },
              "gridPos": { "h": 8, "w": 24, "x": 0, "y": 16 },
              "id": 5,
              "title": "HTTP Latency p95 (JMeter)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "histogram_quantile(0.95, sum by (le) (rate(http_latency_hist_bucket{run_id=~\"$run_id\"}[5m])))",
                  "legendFormat": "p95",
                  "refId": "G"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {}, "overrides": [] },
              "gridPos": { "h": 8, "w": 12, "x": 0, "y": 24 },
              "id": 6,
              "title": "HTTP Throughput (JMeter)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "sum(rate(http_requests{run_id=~\"$run_id\"}[1m]))",
                  "legendFormat": "Throughput",
                  "refId": "H"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {}, "overrides": [] },
              "gridPos": { "h": 8, "w": 12, "x": 12, "y": 24 },
              "id": 7,
              "title": "HTTP Error Rate (JMeter)",
              "type": "timeseries",
              "targets": [
                {
                  "expr": "(sum(rate(http_failure{run_id=~\"$run_id\"}[1m])) or vector(0))",
                  "legendFormat": "Error Rate",
                  "refId": "I"
                }
              ]
            },
            {
              "datasource": "Prometheus",
              "fieldConfig": { "defaults": {"unit": "percent"}, "overrides": [] },
              "gridPos": { "h": 8, "w": 12, "x": 0, "y": 32 },
              "id": 8,
              "title": "HTTP Success % (JMeter)",
              "type": "timeseries",
              "targets": [
                { "expr": "(sum(rate(http_success{run_id=~\"$run_id\"}[5m])) / sum(rate(http_requests{run_id=~\"$run_id\"}[5m]))) * 100", "legendFormat": "Success %", "refId": "J" }
              ]
            }
          ],
          "refresh": "5s",
          "schemaVersion": 30,
          "style": "dark",
          "tags": ["performance", "jmeter"],
          "templating": { "list": [ { "name": "run_id", "type": "query", "datasource": "Prometheus", "query": "label_values(http_requests, run_id)", "refresh": 2, "includeAll": true, "multi": true, "allValue": ".*", "current": { "text": "All", "value": ["$__all"], "selected": true } } ] },
          "time": { "from": "now-1h", "to": "now" },
          "timepicker": {},
          "timezone": "browser",
          "title": "JMeter Performance Overview",
          "version": 1
        }
    postgres:
      json: |
        {
          "annotations": {"list": []},
          "editable": true,
          "title": "PostgreSQL Performance",
          "uid": "pg-perf",
          "tags": ["postgres","database","performance"],
          "timezone": "browser",
          "schemaVersion": 30,
          "version": 1,
          "refresh": "10s",
          "time": {"from": "now-1h", "to": "now"},
          "templating": {
            "list": [
              {
                "name": "datname",
                "type": "query",
                "datasource": "Prometheus",
                "query": "label_values(pg_database_size_bytes, datname)",
                "refresh": 2,
                "includeAll": true,
                "multi": true,
                "allValue": ".*",
                "current": {"text": "All", "value": ["$__all"], "selected": true}
              }
            ]
          },
          "panels": [
            {"type":"row","title":"Load","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":1},
            {
              "type":"stat","title":"TPS (avg 5m)","id":2,"gridPos":{"h":4,"w":4,"x":0,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum(rate(pg_stat_database_xact_commit{datname=~\"$datname\"}[$__rate_interval]) + rate(pg_stat_database_xact_rollback{datname=~\"$datname\"}[$__rate_interval]))"}],
              "fieldConfig":{"defaults":{"unit":"ops"},"overrides":[]}
            },
            {
              "type":"stat","title":"Active Connections","id":3,"gridPos":{"h":4,"w":4,"x":4,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum(pg_stat_activity_count{datname=~\"$datname\"})"}]
            },
            {
              "type":"stat","title":"Active % of Max","id":4,"gridPos":{"h":4,"w":4,"x":8,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"(sum(pg_stat_activity_count{datname=~\"$datname\"}) / sum(pg_settings_max_connections)) * 100"}],
              "fieldConfig":{"defaults":{"unit":"percent"},"overrides":[]}
            },
            {
              "type":"stat","title":"Deadlocks / min","id":5,"gridPos":{"h":4,"w":4,"x":12,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum(rate(pg_stat_database_deadlocks{datname=~\"$datname\"}[5m]))"}]
            },
            {
              "type":"stat","title":"Replication Lag (s)","id":6,"gridPos":{"h":4,"w":4,"x":16,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"max(pg_replication_lag_seconds)"}]
            },
            {
              "type":"stat","title":"Top DB Size (MB)","id":7,"gridPos":{"h":4,"w":4,"x":20,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"topk(1, pg_database_size_bytes{datname=~\"$datname\"})/1024/1024"}],
              "fieldConfig":{"defaults":{"unit":"megabytes"},"overrides":[]}
            },
            {"type":"row","title":"Throughput","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":8},
            {
              "type":"timeseries","title":"Transactions per Second by DB","id":9,"gridPos":{"h":6,"w":12,"x":0,"y":6},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum by (datname) (rate(pg_stat_database_xact_commit{datname=~\"$datname\"}[$__rate_interval]) + rate(pg_stat_database_xact_rollback{datname=~\"$datname\"}[$__rate_interval]))"}],
              "transformations":[],"fieldConfig":{"defaults":{},"overrides":[]}
            },
            {
              "type":"timeseries","title":"Tuples Activity / s","id":10,"gridPos":{"h":6,"w":12,"x":12,"y":6},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum by (datname) (rate(pg_stat_database_tup_returned{datname=~\"$datname\"}[5m]) + rate(pg_stat_database_tup_fetched{datname=~\"$datname\"}[5m]) + rate(pg_stat_database_tup_inserted{datname=~\"$datname\"}[5m]) + rate(pg_stat_database_tup_updated{datname=~\"$datname\"}[5m]) + rate(pg_stat_database_tup_deleted{datname=~\"$datname\"}[5m]))"}]
            },
            {"type":"row","title":"Connections & Locks","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":12},"id":11},
            {
              "type":"timeseries","title":"Active Connections by DB","id":12,"gridPos":{"h":6,"w":8,"x":0,"y":13},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"sum by (datname) (pg_stat_activity_count{datname=~\"$datname\"})"}]
            },
            {
              "type":"timeseries","title":"Locks by Mode","id":13,"gridPos":{"h":6,"w":8,"x":8,"y":13},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"sum(pg_locks_count{datname=~\"$datname\"}) by (mode)"}]
            },
            {
              "type":"timeseries","title":"Connections by Backend Type","id":14,"gridPos":{"h":6,"w":8,"x":16,"y":13},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum by (backend_type) (pg_stat_activity_count{datname=~\"$datname\"})"}],
              "description":"Breakdown of connections grouped by backend_type (client backend, autovacuum worker, etc)."
            },
            {"type":"row","title":"Cache & I/O","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":19},"id":15},
            {
              "type":"timeseries","title":"Cache Hit Ratio (Heap %)","id":16,"gridPos":{"h":6,"w":12,"x":0,"y":20},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"(sum by (datname) (pg_statio_user_tables_heap_blocks_hit{datname=~\"$datname\"}))/(sum by (datname) (pg_statio_user_tables_heap_blocks_hit{datname=~\"$datname\"} + pg_statio_user_tables_heap_blocks_read{datname=~\"$datname\"})) * 100"}],
              "fieldConfig":{"defaults":{"unit":"percent"},"overrides":[]},
              "description":"Heap cache hit % per database (no rate – cumulative counters provide ratio)."
            },
            {
              "type":"timeseries","title":"Heap Blocks Hit vs Read","id":17,"gridPos":{"h":6,"w":12,"x":12,"y":20},
              "datasource":"Prometheus",
              "targets":[
                {"refId":"A","expr":"sum by (datname) (pg_statio_user_tables_heap_blocks_hit{datname=~\"$datname\"})","legendFormat":"Hit {{datname}}"},
                {"refId":"B","expr":"sum by (datname) (pg_statio_user_tables_heap_blocks_read{datname=~\"$datname\"})","legendFormat":"Read {{datname}}"}
              ],
              "description":"Absolute cumulative heap block hits vs reads (can derive trends via derivative() if needed)."
            },
            {"type":"row","title":"Sizes","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":26},"id":18},
            {
              "type":"timeseries","title":"Database Sizes (MB)","id":19,"gridPos":{"h":6,"w":12,"x":0,"y":27},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"pg_database_size_bytes{datname=~\"$datname\"}/1024/1024"}],
              "fieldConfig":{"defaults":{"unit":"megabytes"},"overrides":[]}
            },
            {
              "type":"timeseries","title":"Top 5 DB Sizes (MB)","id":20,"gridPos":{"h":6,"w":12,"x":12,"y":27},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"topk(5, pg_database_size_bytes{datname=~\"$datname\"})/1024/1024"}],
              "fieldConfig":{"defaults":{"unit":"megabytes"},"overrides":[]}
            }
          ]
        }
    springboot-app:
      json: |
        {
          "title": "Spring Boot Application Performance",
          "uid": "app-perf",
          "tags": ["application","springboot","performance"],
          "timezone": "browser",
          "schemaVersion": 38,
          "version": 2,
          "refresh": "10s",
          "time": { "from": "now-1h", "to": "now" },
          "templating": {
            "list": [
              {"name":"job","type":"query","datasource":"Prometheus","query":"label_values(http_server_requests_milliseconds_count, job)","includeAll":true,"multi":true,"allValue":".*","refresh":2,"current":{"text":"app/springboot-app","value":"app/springboot-app"}},
              {"name":"application","type":"query","datasource":"Prometheus","query":"label_values(http_server_requests_milliseconds_count{job=~\"$job\"}, application)","includeAll":true,"multi":true,"allValue":".*","refresh":2,"current":{"text":"springboot-app","value":"springboot-app"}},
              {"name":"uri","type":"query","datasource":"Prometheus","query":"label_values(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",uri!=\"UNKNOWN\"}, uri)","includeAll":true,"multi":true,"allValue":".*","refresh":2},
              {"name":"status","type":"query","datasource":"Prometheus","query":"label_values(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\"}, status)","includeAll":true,"multi":true,"allValue":".*","refresh":2},
              {"name":"pod","type":"constant","query":"","current":{"text":"(no pod labels)","value":""},"hide":1}
            ]
          },
          "panels": [
            {"type":"row","title":"HTTP Traffic","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":100,"description":"Overall request throughput, errors and success ratio."},
            {
              "type":"timeseries","title":"RPS (all)","id":101,"gridPos":{"h":6,"w":6,"x":0,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\"}[$__rate_interval]))","legendFormat":"Total RPS"}],
              "fieldConfig":{"defaults":{"unit":"ops","decimals":1},"overrides":[]},
              "description":"Total requests per second across all URIs." 
            },
            {
              "type":"timeseries","title":"RPS by URI (top10)","id":102,"gridPos":{"h":6,"w":6,"x":6,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"topk(10, sum by (uri) (rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",uri!=\"UNKNOWN\"}[5m])))","legendFormat":"{{uri}}"}],
              "fieldConfig":{"defaults":{"unit":"ops","decimals":1},"overrides":[]},
              "description":"Top 10 URIs by request rate (5m window)." 
            },
            {
              "type":"timeseries","title":"Error rate 5xx","id":103,"gridPos":{"h":6,"w":6,"x":12,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",status=~\"5..\"}[$__rate_interval]))","legendFormat":"5xx RPS"}],
              "fieldConfig":{"defaults":{"unit":"ops","decimals":2},"overrides":[]},
              "description":"Requests per second returning 5xx status codes." 
            },
            {
              "type":"stat","title":"Error %","id":104,"gridPos":{"h":6,"w":3,"x":18,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"(sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",status=~\"5..\"}[$__rate_interval])) / sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\"}[$__rate_interval]))) * 100"}],
              "fieldConfig":{"defaults":{"unit":"percent","decimals":2,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":1},{"color":"red","value":3}]}},"overrides":[]},
              "description":"Percentage of requests with 5xx over total." 
            },
            {
              "type":"stat","title":"Success %","id":105,"gridPos":{"h":6,"w":3,"x":21,"y":1},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"(1 - (sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",status=~\"5..\"}[$__rate_interval])) / sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\"}[$__rate_interval])))) * 100"}],
              "fieldConfig":{"defaults":{"unit":"percent","decimals":2,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":95},{"color":"green","value":97}]}},"overrides":[]},
              "description":"Successful (non-5xx) request percentage." 
            },
            {"type":"row","title":"Latency","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":110,"description":"Latency distribution and averages."},
            {
              "type":"timeseries","title":"Latency p50/p95/p99 (ms)","id":111,"gridPos":{"h":6,"w":12,"x":0,"y":8},
              "datasource":"Prometheus",
              "targets":[
                {"refId":"P50","expr":"histogram_quantile(0.5, sum by (le) (rate(http_server_requests_milliseconds_bucket{job=~\"$job\",application=~\"$application\"}[5m])))","legendFormat":"p50"},
                {"refId":"P95","expr":"histogram_quantile(0.95, sum by (le) (rate(http_server_requests_milliseconds_bucket{job=~\"$job\",application=~\"$application\"}[5m])))","legendFormat":"p95"},
                {"refId":"P99","expr":"histogram_quantile(0.99, sum by (le) (rate(http_server_requests_milliseconds_bucket{job=~\"$job\",application=~\"$application\"}[5m])))","legendFormat":"p99"}
              ],
              "fieldConfig":{"defaults":{"unit":"ms","decimals":1},"overrides":[]},
              "description":"Latency quantiles over 5m rate window." 
            },
            {
              "type":"timeseries","title":"Avg latency (ms)","id":112,"gridPos":{"h":6,"w":6,"x":12,"y":8},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"(sum(rate(http_server_requests_milliseconds_sum{job=~\"$job\",application=~\"$application\"}[5m])) / sum(rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\"}[5m])))"}],
              "fieldConfig":{"defaults":{"unit":"ms","decimals":1},"overrides":[]},
              "description":"Average latency derived from sum / count." 
            },
            {
              "type":"timeseries","title":"Active requests","id":113,"gridPos":{"h":6,"w":6,"x":18,"y":8},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"sum(http_server_requests_active_milliseconds_count{job=~\"$job\",application=~\"$application\"})","legendFormat":"active"}],
              "fieldConfig":{"defaults":{"unit":"requests"},"overrides":[]},
              "description":"In-flight requests (active)." 
            },
            {"type":"row","title":"Top URIs","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":14},"id":120,"description":"Slow and error-prone URIs."},
            {
              "type":"timeseries","title":"Top 5 slow URIs (avg ms)","id":121,"gridPos":{"h":6,"w":12,"x":0,"y":15},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"topk(5, (sum by (uri) (rate(http_server_requests_milliseconds_sum{job=~\"$job\",application=~\"$application\",uri!=\"UNKNOWN\"}[5m])) / sum by (uri) (rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",uri!=\"UNKNOWN\"}[5m]))))","legendFormat":"{{uri}}"}],
              "fieldConfig":{"defaults":{"unit":"ms","decimals":1},"overrides":[]},
              "description":"Average latency per URI (5m) top 5." 
            },
            {
              "type":"timeseries","title":"Top 5 error URIs (5xx RPS)","id":122,"gridPos":{"h":6,"w":12,"x":12,"y":15},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"topk(5, sum by (uri) (rate(http_server_requests_milliseconds_count{job=~\"$job\",application=~\"$application\",status=~\"5..\",uri!=\"UNKNOWN\"}[5m])))","legendFormat":"{{uri}}"}],
              "fieldConfig":{"defaults":{"unit":"ops","decimals":2},"overrides":[]},
              "description":"Highest 5xx producing URIs (5m rate)." 
            },
            {"type":"row","title":"Hikari Pool","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":21},"id":130,"description":"JDBC connection pool health & usage."},
            {
              "type":"timeseries","title":"Connections Active/Idle","id":131,"gridPos":{"h":6,"w":8,"x":0,"y":22},
              "datasource":"Prometheus",
              "targets":[
                {"refId":"Active","expr":"sum(hikaricp_connections_active{job=~\"$job\",application=~\"$application\"})","legendFormat":"active"},
                {"refId":"Idle","expr":"sum(hikaricp_connections_idle{job=~\"$job\",application=~\"$application\"})","legendFormat":"idle"},
                {"refId":"Max","expr":"max(hikaricp_connections_max{job=~\"$job\",application=~\"$application\"})","legendFormat":"max"}
              ],
              "fieldConfig":{"defaults":{},"overrides":[]},
              "description":"Active, idle and configured max connections." 
            },
            {
              "type":"timeseries","title":"Acquire p95 / Usage p95 (ms)","id":132,"gridPos":{"h":6,"w":8,"x":8,"y":22},
              "datasource":"Prometheus",
              "targets":[
                {"refId":"Acquire95","expr":"hikaricp_connections_acquire_milliseconds{quantile=\"0.95\",job=~\"$job\",application=~\"$application\"}","legendFormat":"acquire p95"},
                {"refId":"Usage95","expr":"hikaricp_connections_usage_milliseconds{quantile=\"0.95\",job=~\"$job\",application=~\"$application\"}","legendFormat":"usage p95"}
              ],
              "fieldConfig":{"defaults":{"unit":"ms","decimals":1},"overrides":[]},
              "description":"p95 acquire & usage times." 
            },
            {
              "type":"stat","title":"Timeouts (15m)","id":133,"gridPos":{"h":6,"w":4,"x":16,"y":22},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"increase(hikaricp_connections_timeout_total{job=~\"$job\",application=~\"$application\"}[15m])"}],
              "fieldConfig":{"defaults":{"unit":"short","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":1}]},"decimals":0},"overrides":[]},
              "description":"Connection acquisition timeouts in last 15m (should be 0)." 
            },
            {
              "type":"stat","title":"Usage p99 (ms)","id":134,"gridPos":{"h":6,"w":4,"x":20,"y":22},
              "datasource":"Prometheus",
              "targets":[{"refId":"A","expr":"hikaricp_connections_usage_milliseconds{quantile=\"0.99\",job=~\"$job\",application=~\"$application\"}"}],
              "fieldConfig":{"defaults":{"unit":"ms","decimals":1,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":100},{"color":"red","value":300}]}},"overrides":[]},
              "description":"p99 connection usage duration." 
            },
            {"type":"row","title":"JVM Memory / GC","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":140,"description":"Heap, allocation rate, classes."},
            {
              "type":"timeseries","title":"Heap Used vs Max (live)","id":141,"gridPos":{"h":6,"w":12,"x":0,"y":29},
              "datasource":"Prometheus",
              "targets":[
                {"refId":"Live","expr":"sum(jvm_gc_live_data_size_bytes{job=~\"$job\",application=~\"$application\"})","legendFormat":"live"},
                {"refId":"Max","expr":"sum(jvm_gc_max_data_size_bytes{job=~\"$job\",application=~\"$application\"})","legendFormat":"max"}
              ],
              "fieldConfig":{"defaults":{"unit":"bytes"},"overrides":[]},
              "description":"Current live data size vs max allowed." 
            },
            {
              "type":"timeseries","title":"Allocation rate (bytes/s)","id":142,"gridPos":{"h":6,"w":6,"x":12,"y":29},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"sum(rate(jvm_gc_memory_allocated_bytes_total{job=~\"$job\",application=~\"$application\"}[5m]))","legendFormat":"alloc rate"}],
              "fieldConfig":{"defaults":{"unit":"Bps"},"overrides":[]},
              "description":"Object allocation rate (5m)." 
            },
            {
              "type":"timeseries","title":"Classes Loaded","id":143,"gridPos":{"h":6,"w":6,"x":18,"y":29},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"sum(jvm_classes_loaded{job=~\"$job\",application=~\"$application\"})","legendFormat":"loaded"}],
              "fieldConfig":{"defaults":{},"overrides":[]},
              "description":"Currently loaded classes." 
            },
            {"type":"row","title":"Container resources","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":35},"id":150,"description":"Container runtime resource usage."},
            {
              "type":"timeseries","title":"CPU Usage (cores)","id":151,"gridPos":{"h":6,"w":8,"x":0,"y":36},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"sum(rate(container_cpu_usage_seconds_total{job=~\"$job\",cpu=\"total\"}[$__rate_interval]))","legendFormat":"total"}],
              "fieldConfig":{"defaults":{"unit":"cores","decimals":3},"overrides":[]},
              "description":"Total CPU cores (rate of container_cpu_usage_seconds_total, cpu=total) for selected job. Pod labels absent in current scrape." 
            },
            {
              "type":"timeseries","title":"CPU Throttling %","id":152,"gridPos":{"h":6,"w":8,"x":8,"y":36},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"(sum(rate(container_cpu_cfs_throttled_seconds_total{job=~\"$job\"}[5m])) / sum(rate(container_cpu_usage_seconds_total{job=~\"$job\",cpu=\"total\"}[5m]))) * 100","legendFormat":"total"}],
              "fieldConfig":{"defaults":{"unit":"percent","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":5},{"color":"red","value":10}]}},"overrides":[]},
              "description":"Total throttling percentage (no pod labels available)." 
            },
            {
              "type":"timeseries","title":"Memory Working Set","id":153,"gridPos":{"h":6,"w":8,"x":16,"y":36},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"sum(container_memory_working_set_bytes{job=~\"$job\"})","legendFormat":"total"}],
              "fieldConfig":{"defaults":{"unit":"bytes"},"overrides":[]},
              "description":"Total working set memory (no pod breakdown labels present)." 
            },
            {"type":"row","title":"Uptime / Startup","collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":42},"id":160,"description":"Application lifecycle timing."},
            {
              "type":"stat","title":"Uptime (h)","id":161,"gridPos":{"h":4,"w":4,"x":0,"y":43},
              "datasource":"Prometheus","targets":[{"refId":"A","expr":"(time() - (min(application_started_time_milliseconds{job=~\"$job\",application=~\"$application\"})/1000)) / 3600"}],
              "fieldConfig":{"defaults":{"unit":"hours","decimals":1},"overrides":[]},
              "description":"Time since earliest instance start." 
            }
          ]
        }
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server.monitoring.svc.cluster.local:80
        access: proxy
        isDefault: true